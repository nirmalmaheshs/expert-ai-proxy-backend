service: expert-ai-api-backend #Replace it using your application name

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 512
  timeout: 30
  stackTags:
    appname: ${self:service.name}
    createdby: serverless #replace it by your email id
    owner: appdev
    approle: creating serverless framework
    environment: ${self:provider.stage}

# plugin to run it locally
plugins:
  - serverless-offline
  - serverless-webpack

# lambda functions
functions:

  getToken:
    handler: src/api/expertai.getToken
    events:
      - http:
         # http request path
         path: /token
         method: POST

  hateSpeech:
    handler: src/api/expertai.hateSpeech
    events:
      - http:
         # http request path
         path: /hate-speech
         method: POST

# resources:
#   Resources:
#     OpenSearchServiceDomain:
#       Type: AWS::OpenSearchService::Domain
#       Properties:
#         DomainName: ${self:service.name}
#         EngineVersion: 'OpenSearch_1.3'
#         CognitoOptions:
#           Enabled: true
#           IdentityPoolId: String
#           RoleArn: String
#           UserPoolId: String
#         ClusterConfig:
#           DedicatedMasterEnabled: false
#           InstanceCount: '1'
#           ZoneAwarenessEnabled: true
#           InstanceType: 't3.small.search'
#         EBSOptions:
#           EBSEnabled: true
#           Iops: '3000'
#           VolumeSize: '10'
#           VolumeType: 'gp3'
#         AccessPolicies:
#           Version: '2012-10-17'
#           Statement:
#             -
#               Effect: 'Allow'
#               Principal:
#                 AWS: 'arn:aws:iam::123456789012:user/opensearch-user'
#               Action: 'es:*'
#               Resource: 'arn:aws:es:us-east-1:846973539254:domain/test/*'
